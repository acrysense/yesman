"use strict";

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }
function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
document.addEventListener('DOMContentLoaded', function () {
  // inputmask
  Inputmask().mask(document.querySelectorAll('input'));

  // checker
  var useItemChecker = function useItemChecker(els, onClickOutside) {
    var checkBodyClick = function checkBodyClick(e) {
      var currentEl = e.target;
      while (currentEl) {
        if (els.includes(currentEl)) break;
        currentEl = currentEl.parentNode;
      }
      if (!currentEl) {
        onClickOutside();
        removeBodyChecker();
      }
    };
    function setBodyChecker() {
      document.documentElement.addEventListener('click', checkBodyClick);
    }
    function removeBodyChecker() {
      document.documentElement.removeEventListener('click', checkBodyClick);
    }
    return {
      setBodyChecker: setBodyChecker,
      removeBodyChecker: removeBodyChecker
    };
  };

  // mobile menu
  var mobileMenu = document.getElementById('menu');
  var mobileMenuClose = document.querySelector('.menu__close');
  var mobileMenuTrigger = document.getElementById('hamburger-toggle');
  if (mobileMenu && mobileMenuTrigger) {
    mobileMenuTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (mobileMenu.classList.contains('is--active')) {
        mobileMenu.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      } else {
        mobileMenu.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
    if (mobileMenuClose) {
      mobileMenuClose.addEventListener('click', function (event) {
        event.preventDefault();
        if (mobileMenu.classList.contains('is--active')) {
          mobileMenu.classList.remove('is--active');
          document.body.classList.remove('scroll-disabled');
        }
      });
    }
  }

  // select
  var sortSelectBox = document.querySelectorAll('.select-box__placeholder');
  var sortSelectBoxOption = document.querySelectorAll('.select-box__checkbox');
  if (sortSelectBox) {
    sortSelectBox.forEach(function (item) {
      var close = function close() {
        document.querySelectorAll('.select-box').forEach(function (child) {
          return child.classList.remove('is--active');
        });
      };
      var itemChecker = useItemChecker([item.parentNode].concat(_toConsumableArray(document.querySelectorAll('.select-box'))), close);
      item.addEventListener('click', function () {
        var parent = item.closest('.select-box');
        if (parent.classList.contains('is--active')) {
          close();
        } else {
          close();
          parent.classList.add('is--active');
          itemChecker.setBodyChecker();
        }
      });
    });
    if (sortSelectBoxOption) {
      sortSelectBoxOption.forEach(function (item) {
        item.addEventListener('click', function () {
          var parent = item.closest('.select-box');
          var placeholder = parent.querySelector('.select-box__placeholder span');
          placeholder.innerHTML = item.querySelector('.select-box__title').innerHTML;
          document.querySelectorAll('.select-box').forEach(function (child) {
            return child.classList.remove('is--active');
          });
          if (!parent.querySelector('.select-box__placeholder').classList.contains('is--selected')) {
            parent.querySelector('.select-box__placeholder').classList.add('is--selected');
          }
        });
      });
    }
  }

  // filter select
  var filterSelectBox = document.querySelectorAll('.filter-select-box__placeholder');
  var filterSelectBoxOption = document.querySelectorAll('.filter-select-box__checkbox');
  if (filterSelectBox) {
    filterSelectBox.forEach(function (item) {
      var close = function close() {
        document.querySelectorAll('.filter-select-box').forEach(function (child) {
          return child.classList.remove('is--active');
        });
      };
      var itemChecker = useItemChecker([item.parentNode].concat(_toConsumableArray(document.querySelectorAll('.filter-select-box'))), close);
      item.addEventListener('click', function () {
        var parent = item.closest('.filter-select-box');
        if (parent.classList.contains('is--active')) {
          close();
        } else {
          close();
          parent.classList.add('is--active');
          itemChecker.setBodyChecker();
        }
      });
    });
    if (filterSelectBoxOption) {
      filterSelectBoxOption.forEach(function (item) {
        item.addEventListener('click', function () {
          var parent = item.closest('.filter-select-box');
          var placeholder = parent.querySelector('.filter-select-box__placeholder span');
          var value = parent.querySelector('.filter-select-box__placeholder .value') ? parent.querySelector('.filter-select-box__placeholder .value') : null;
          var counter = 0;
          if (parent.classList.contains('filter-select-box--multiple')) {
            counter = parent.querySelectorAll('.filter-select-box__input:checked').length;
            if (value) {
              if (counter > 0) {
                if (value.classList.contains('is--hidden')) {
                  value.classList.remove('is--hidden');
                }
                value.innerHTML = counter;
              } else {
                if (!value.classList.contains('is--hidden')) {
                  value.classList.add('is--hidden');
                }
                value.innerHTML = '';
              }
            }
          } else {
            placeholder.innerHTML = item.querySelector('.filter-select-box__title').innerHTML;
            document.querySelectorAll('.filter-select-box').forEach(function (child) {
              return child.classList.remove('is--active');
            });
            if (!parent.querySelector('.filter-select-box__placeholder').classList.contains('is--selected')) {
              parent.querySelector('.filter-select-box__placeholder').classList.add('is--selected');
            }
          }
        });
      });
    }
  }

  // product counter
  var productQuantityBtnMinus = document.querySelector('.c-quantity__btn--minus');
  var productQuantityBtnPlus = document.querySelector('.c-quantity__btn--plus');
  var productQuantityValue = document.querySelector('.c-quantity__value');
  if (productQuantityBtnMinus && productQuantityBtnPlus && productQuantityValue) {
    productQuantityBtnMinus.addEventListener('click', function () {
      event.preventDefault();
      var currentValue = parseInt(productQuantityValue.value);
      if (currentValue > 1) {
        currentValue--;
        productQuantityValue.value = currentValue;
      }
    });
    productQuantityBtnPlus.addEventListener('click', function (event) {
      event.preventDefault();
      var currentValue = parseInt(productQuantityValue.value);
      currentValue++;
      productQuantityValue.value = currentValue;
    });
  }

  // collection filter
  var collectionFilterTrigger = document.querySelector('.collection__filter-trigger');
  var collectionFilter = document.querySelector('.collection-dropdown-filter');
  var collectionFilterClose = document.querySelector('.collection-dropdown-filter__close');
  if (collectionFilterTrigger && collectionFilter && collectionFilterClose) {
    collectionFilterTrigger.addEventListener('click', function (event) {
      event.preventDefault();
      if (!collectionFilter.classList.contains('is--active')) {
        collectionFilter.classList.add('is--active');
        document.body.classList.add('scroll-disabled');
      }
    });
    collectionFilterClose.addEventListener('click', function (event) {
      event.preventDefault();
      if (collectionFilter.classList.contains('is--active')) {
        collectionFilter.classList.remove('is--active');
        document.body.classList.remove('scroll-disabled');
      }
    });
  }

  // collection slider
  var collectionSlider = document.querySelector('.collection__slider .swiper');
  if (collectionSlider) {
    var myCollectionSlider = new Swiper(collectionSlider, {
      slidesPerView: 3,
      spaceBetween: 35,
      breakpoints: {
        0: {
          slidesPerView: 'auto',
          spaceBetween: 20
        },
        768: {
          slidesPerView: 2,
          spaceBetween: 20
        },
        1024: {
          slidesPerView: 3,
          spaceBetween: 35
        }
      }
    });
  }

  // advantages slider
  var advantagesSlider = document.querySelector('.advantages__slider .swiper');
  if (advantagesSlider) {
    var myAdvantagesSlider = new Swiper(advantagesSlider, {
      slidesPerView: 3,
      spaceBetween: 20,
      loop: true,
      pagination: {
        el: '.advantages__slider .swiper-pagination',
        type: 'bullets',
        clickable: true
      },
      breakpoints: {
        0: {
          slidesPerView: 1
        },
        768: {
          slidesPerView: 2
        },
        1024: {
          slidesPerView: 3
        }
      }
    });
  }

  // product slider
  var galleryThumb = document.querySelector('.product__slider .gallery-thumbs');
  var galleryMain = document.querySelector('.product__slider .gallery-main');
  if (galleryThumb && galleryMain) {
    var mySwiperThumb = new Swiper(galleryThumb, {
      direction: 'vertical',
      slidesPerView: 3,
      spaceBetween: 20,
      freeMode: true,
      watchSlidesVisibility: true,
      watchSlidesProgress: true
    });
    var mySwiperMain = new Swiper(galleryMain, {
      slidesPerView: 1,
      spaceBetween: 0,
      preloadImages: false,
      pagination: {
        el: '.product__slider .gallery-main .swiper-pagination',
        type: 'bullets',
        clickable: true
      },
      thumbs: {
        swiper: mySwiperThumb
      }
    });
    galleryThumb.querySelectorAll('.swiper-slide').forEach(function (item) {
      item.addEventListener('click', function () {
        galleryThumb.querySelectorAll('.swiper-slide').forEach(function (child) {
          return child.classList.remove('is--active');
        });
        item.classList.add('is--active');
        mySwiperMain.slideTo(item.dataset.index);
      });
    });
    mySwiperMain.on('slideChange', function () {
      mySwiperThumb.slideTo(mySwiperMain.realIndex);
      galleryThumb.querySelectorAll('.swiper-slide').forEach(function (child) {
        return child.classList.remove('is--active');
      });
      galleryThumb.querySelectorAll('.swiper-slide')[mySwiperMain.realIndex].classList.add('is--active');
    });
  }

  // header
  var header = document.querySelector('.header');
  var headerHeight = header ? header.offsetHeight : null;
  window.addEventListener('scroll', function () {
    if (header) {
      if (window.scrollY > headerHeight) {
        header.classList.add('is--fixed');
      } else {
        header.classList.remove('is--fixed');
      }
    }
  });
});